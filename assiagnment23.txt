1. What is the result of the code, and why?
 def func(a, b=6, c=8):
	print(a, b, c)
 func(1, 2)

ans:
   it will print the output as 1,2,8 .


2. What is the result of this code, and why?
 def func(a, b, c=5):
	print(a, b, c)
 func(1, c=3, b=2)

ans:
  it will print the output as 1, 3, 2 .


3. How about this code: what is its result, and why?
 def func(a, *pargs):
	print(a, pargs)
 func(1, 2, 3)

ans:
   it will print 1, [2,3]

4. What does this code print, and why?
 def func(a, **kargs):
	print(a, kargs)
 func(a=1, c=3, b=2)

ans:
  it will print 1, [3,2] .

5. What gets printed by this, and explain?
def func(a, b, c=8, d=5): print(a, b, c, d)
func(1, *(5, 6))

ans:
  it will print 1, 5, 6, 5 .

6. what is the result of this, and explain?
def func(a, b, c): a = 2; b[0] = &#39;x&#39;; c[&#39;a&#39;] = &#39;y&#39;
l=1; m=[1]; n={&#39;a&#39;:0}
func(l, m, n)

 l, m, n

ans:
 l = 1
 m = [1]
 n = {'a':0}