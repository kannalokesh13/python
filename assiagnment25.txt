1) What is the difference between enclosing a list comprehension in square brackets and
parentheses?
ans:
 Square Brackets []: 
      When a list comprehension is enclosed in square brackets, it creates and returns
      a new list. Each element generated by the comprehension is appended to the resulting list.
 Parentheses ():
      When a list comprehension is enclosed in parentheses, it creates a generator object. 
      A generator is an iterable that generates values 


2) What is the relationship between generators and iterators?
ans:
  An iterator is an object that implements the iterator protocol, which consists of two methods: __iter__() and __next__().
  The __iter__() method returns the iterator object itself, and the __next__() method returns the next item from the iterator.
  Generators are a special type of iterator, defined using generator functions or generator expressions.
  Generator functions are defined using the def keyword and contain one or more yield statements.

3) What are the signs that a function is a generator function?
ans:
   Function Definition: The function is defined using the def keyword, like any other regular function.
   Use of yield Keyword: Inside the function body, the yield keyword is used instead of the return keyword to yield a value from the
   function. The yield statement suspends the function's execution and returns a value to the caller, but unlike return, it allows the function to resume from where it left off when called again.

4) What is the purpose of a yield statement?
ans:
  The yield statement is used to get the next element of the generator.
